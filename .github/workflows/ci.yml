name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, 3.10, 3.11]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run linting
      run: |
        pip install flake8
        flake8 pim/ dam/ mdm_core/ shared/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 pim/ dam/ mdm_core/ shared/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Run tests
      run: |
        pytest shared/tests/ -v --tb=short
    
    - name: Run coverage
      run: |
        pytest shared/tests/ --cov=pim --cov=dam --cov=mdm_core --cov-report=xml --cov-report=term-missing
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker images
      run: |
        docker build -t mdm-pim:latest .
        docker build -t mdm-dam:latest .
        docker build -t mdm-core:latest .
    
    - name: Test Docker images
      run: |
        docker run --rm mdm-pim:latest python -c "import pim; print('PIM module OK')"
        docker run --rm mdm-dam:latest python -c "import dam; print('DAM module OK')"
        docker run --rm mdm-core:latest python -c "import mdm_core; print('MDM Core module OK')"